"use strict";

var _auto = _interopRequireDefault(require("chart.js/auto"));

var _chartView = _interopRequireDefault(require("./views/chartView"));

var model = _interopRequireWildcard(require("./model.js"));

var _citiesView = _interopRequireDefault(require("./views/citiesView"));

var _reportView = _interopRequireDefault(require("./views/reportView"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// const init = async function () {
// 	try {
// 		ReportView.renderSpinner();
// 		await model.loadData();
// 		ReportView.render(model.state);
// 		ReportView.updateUI(model.state.current);
// 		CitiesView.render(model.state.topCities);
// 	} catch (err) {
// 		console.error(`ðŸ¥µðŸ˜± ${err}`);
// 	}
// };
// // window.addEventListener("load", init);
// init();
const getUserLocation = async function () {
  try {
    const {
      coords
    } = await model.getPosition();
    const {
      latitude,
      longitude
    } = coords;
    model.state.location.lat = latitude;
    model.state.location.lng = longitude;
    console.log(model.state);
  } catch (error) {
    console.error(`ðŸ˜¡ðŸ˜¡ðŸ˜¡ Abe location ni mil raha!`);
    console.log("Ab default use kro...");
    console.log(model.state);
  }
}; //Controlling the report view


const timeout = function (s) {
  return new Promise(function (_, reject) {
    setTimeout(function () {
      reject(new Error(`Request took too long! Timeout after second`));
    }, 1000);
  });
};

const test = async function () {
  await timeout();
};

window.addEventListener("load", () => {
  getUserLocation();
  test();
});