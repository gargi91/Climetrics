"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _view = _interopRequireDefault(require("./view.js"));

var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Parcel 2
class ReportView extends _view.default {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "_parentElement", document.querySelector(".weather-forecast"));

    _defineProperty(this, "_errorMessage", "We could not get the current weather report!");

    _defineProperty(this, "_message", "");
  }

  _generateMarkup() {
    const data = this._data.daily;
    console.log(data);
    const city = this._data.city;
    return `
      <div class="weather-forecast__header">
        <h2 class="heading--2 city-main">${city}</h2>
        <button class="btn btn--detail">Details more
          &rarr;</button>
      </div>

      <div class="glider weather-forecast__track">
        ${data.map(day => {
      return `
          <div class="glider__item forecast">
            <svg class="forecast__icon">
              <use xlink:href="${_icons.default}#icon-${day.icon}">
            </svg>
            <h6 class="forecast__temperature">${day.min}/${day.max}</h6>
            <div class="forecast__day">${day.date}</div>
          </div>
        `;
    }).join("")}
      </div>
      `;
  }

}

var _default = new ReportView();

exports.default = _default;